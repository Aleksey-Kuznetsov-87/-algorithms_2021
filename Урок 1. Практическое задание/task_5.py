"""
Задание 5.
Задание на закрепление навыков работы со стеком

Примечание: в этом задании вспомните ваши знания по работе с ООП
и опирайтесь на пример урока

Реализуйте структуру "стопка тарелок".

Мы можем складывать тарелки в стопку и при превышении некоторого значения
нужно начать складывать тарелки в новую стопку.

Структура должна предусматривать наличие нескольких стеков.
Создание нового стека происходит при достижении предыдущим стеком порогового значения.
Реализуйте по аналогии с примером, рассмотренным на уроке, необходимые методы,
для реализации это структуры, добавьте новые методы (не рассмотренные в примере с урока)
для реализации этой задачи.

После реализации структуры, проверьте ее работу на различных сценариях

Подсказка:
Отдельне стопки можно реализовать через:
# 1) созд-е экземпляров стека (если стопка - класс)
# 2) lst = [[], [], [], [],....]
"""

number_plates = 27    # количество тарелок
stack_height = 4    # вот тут дадим максимальную высоту стопки тарелок


class StackClass:
    def __init__(self, number_elements):
        self.elem = []    # список для временного заполнения
        self.number_elements = number_elements    # количество тарелок

    def add_to(self, el):
        elem_user = []    # в этот список будут вложены другие списки (стопки тарелок)
        for i in range(1, self.number_elements + 1):
            if el > 1:    # пока не превышен стэк тарелок
                el = el - 1
                self.elem.append(i)    # будем их добавлять
                if i == self.number_elements:    # это для того случая, когда тарелок не хватит для заполнения стэка
                    elem_user.append(self.elem)    # добавим к списку
            elif el == 1:    # от 1, иначе будут потери
                el = el + len(self.elem)    # восстановим количество элементов (это ж по сути счётчик)
                self.elem.append(i)    # всё добавим во временный список
                elem_user.append(self.elem)    # вот сюда опять зальём список (как вложенный)
                self.elem = []    # обнулим временный список, а в начале фикла вновь его заполним
        print(elem_user)
        print('Тарелочки по стопочкам :)')


user_punk = StackClass(number_plates)    # передаём количество тарелок в класс
user_punk.add_to(stack_height)    # запускаем и передаём высоту стопки
