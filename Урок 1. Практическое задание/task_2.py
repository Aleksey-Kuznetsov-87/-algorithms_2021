"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

lst = [1, 5, 58, 9, 0, 96, 36, 2, 15, 10]


def complexity_quadrotic(lst_min):    # первый алгоритм. Квадратичная сложность n^2
    ln = lst_min[0]    # O(1) - константная
    for i in lst_min:    # O(n) - линейная
        if i < ln:    # O(n) - линейная
            ln = i    # O(1) - константная
    return ln


def complexity_linear(lst_min):    # второй алгоритм. Линейная сложность n^1
    lst_min_linear = min(lst_min)  # O(n) - линейная
    return lst_min_linear


print(complexity_linear(lst))
print(complexity_quadrotic(lst))
